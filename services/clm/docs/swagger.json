{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is the API for Card Limit Management service.",
        "title": "CLM Service API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/requests": {
            "post": {
                "description": "Create a new limit request with the input payload. Team lead will be auto-assigned based on user's department.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "requests"
                ],
                "summary": "Create a new limit request (with R-2 auto team lead assignment)",
                "parameters": [
                    {
                        "description": "Create Limit Request Payload",
                        "name": "limitRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LimitRequestCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created limit request",
                        "schema": {
                            "$ref": "#/definitions/models.LimitRequestView"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload or data",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error or specific business logic error (e.g., team lead not configured)",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Detailed error message here"
                }
            }
        },
        "models.LimitRequestCreate": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                },
                "desired_date": {
                    "description": "Expected format: YYYY-MM-DD",
                    "type": "string"
                },
                "justification": {
                    "type": "string"
                }
            }
        },
        "models.LimitRequestView": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "current_assignee_id": {
                    "description": "Changed to match spec",
                    "type": "string"
                },
                "desired_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "justification": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        }
    }
}