package main

import (
	"log"
	// "net/http" // Removed as it's not directly used

	"services/clm/internal/handlers"
	_ "services/clm/internal/models" // Explicit import for swag to discover models

	"github.com/gin-gonic/gin"

	// "services/clm/internal/storage" // Not needed if store is created in handler

	_ "services/clm/docs" // docs is generated by Swag CLI, you have to import it.

	swaggerFiles "github.com/swaggo/files"
	ginSwagger "github.com/swaggo/gin-swagger"
)

// @title CLM Service API
// @version 1.0
// @description This is the API for Card Limit Management service.
// @termsOfService http://swagger.io/terms/
// @contact.name API Support
// @contact.url http://www.swagger.io/support
// @contact.email support@swagger.io
// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html
// @host localhost:8080
// @BasePath /
// @schemes http
func main() {
	router := gin.Default()

	// Swagger endpoint
	router.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))

	// In a real application, you would initialize and inject the store.
	// store := storage.NewDBStore()
	// For now, the handler creates its own store instance.

	// Setup routes
	router.POST("/requests", handlers.CreateLimitRequestHandler)

	// Start server
	port := "8080"
	log.Printf("Starting CLM service on port %s", port)
	if err := router.Run(":" + port); err != nil {
		log.Fatalf("Failed to run server: %v", err)
	}
}
